---
- command:      "echo Foreplay version <%= VERSION %>"
  commentary:   "Foreplay running from <%= `hostname -f` %><%= `which foreman` %>"
- command:      "mkdir -p <%= path %> && cd <%= path %> && rm -rf <%= current_port %> && git clone -b <%= instructions['branch'] || 'master' %> <%= instructions['repository'] %> <%= current_port %>"
  commentary:   "Cloning <%= instructions['branch'] || 'master' %> branch of repository <%= instructions['repository'] %>"
- command:      "rvm rvmrc trust <%= current_port %>"
  commentary:   'Trusting the .rvmrc file for the new instance'
- command:      "rvm rvmrc warning ignore <%= current_port %>"
  commentary:   'Ignoring the .rvmrc warning for the new instance'
- command:      'gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys D39DC0E3'
  commentary:   "Trusting RVM's public key"
  ignore_error: true
- command:      "cd <%= current_port %> && mkdir -p tmp doc log config"
  commentary:   'If you have a .rvmrc file there may be a delay now while we install a new ruby'
- command:      'if [ -f .ruby-version ] ; then rvm install `cat .ruby-version` ; else echo "No .ruby-version file found" ; fi'
  commentary:   'If you have a .ruby-version file there may be a delay now while we install a new ruby'
- command:      'rvm info'
  commentary:   'Showing RVM environment'
- key:          'env'
  delimiter:    '='
  prefix:       '.'
  commentary:   'Building .env'
- key:          'foreman'
  delimiter:    ': '
  prefix:       '.'
  commentary:   'Building .foreman'
- key:          'database'
  delimiter:    ': '
  suffix:       '.yml'
  commentary:   'Building config/database.yml'
  before:       '  '
  header:       "<%= environment %>:"
  path:         'config/'
- key:          'application'
  delimiter:    ': '
  suffix:       '.yml'
  commentary:   'Building config/application.yml'
  before:       '  '
  header:       "<%= environment %>:"
  path:         'config/'
- key:          'resque'
  delimiter:    ': '
  suffix:       '.yml'
  commentary:   'Building config/resque.yml'
  before:       environment
  path:         'config/'
- command:      'if [ -d ../cache/vendor/bundle ] ; then rsync -aW --no-compress --delete --info=STATS1 ../cache/vendor/bundle/ vendor/bundle ; else echo No bundle to restore ; fi'
  commentary:   'Attempting to restore bundle from cache'
- command:      'gem install bundler -v "> 1.8"'
  commentary:   'Updating the bundler version'
- command:      'sudo ln -f `which bundle` /usr/bin/bundle || echo Using default version of bundle'
  commentary:   'Setting the current version of bundle to be the default'
- command:      '/usr/bin/bundle install --deployment --clean --jobs 2 --without development test'
  commentary:   'Using bundler to install the required gems in deployment mode'
- command:      'mkdir -p ../cache/vendor && rsync -aW --no-compress --delete --info=STATS1 vendor/bundle/ ../cache/vendor/bundle'
  commentary:   'Caching bundle'
- command:      'if [ -f public/assets/manifest.yml ] ; then echo "Not precompiling assets" ; else RAILS_ENV=<%= environment %> /usr/bin/bundle exec foreman run rake assets:precompile ; fi'
  commentary:   'Precompiling assets unless they were supplied'
- command:      'sudo /usr/bin/bundle exec foreman export upstart /etc/init'
  commentary:   "Converting <%= current_service %> to an upstart service"
- command:      "sudo start <%= current_service %> || sudo restart <%= current_service %>"
  commentary:   'Starting the service'
  ignore_error: true
- command:      "echo <%= current_port %> > $HOME/<%= current_port_file %>"
  commentary:   "Setting the port for the new instance to <%= current_port %>"
- command:      'sleep 60'
  commentary:   'Waiting 60s to give service time to start'
- command:      "sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port <%= current_port %>"
  commentary:   "Adding firewall rule to direct incoming traffic on port 80 to port <%= current_port %>"
- command:      "sudo iptables -t nat -D PREROUTING -p tcp --dport 80 -j REDIRECT --to-port <%= former_port %>"
  commentary:   "Removing previous firewall rule directing traffic to port <%= former_port %>"
  ignore_error: true
- command:      'sudo iptables-save > /etc/iptables/rules.v4'
  commentary:   'Attempting to save firewall rules to /etc/iptables/rules.v4'
  ignore_error: true
- command:      'sudo iptables-save > /etc/iptables.up.rules'
  commentary:   'Attempting to save firewall rules to /etc/iptables.up.rules'
  ignore_error: true
- command:      'sudo iptables-save -c | egrep REDIRECT --color=never'
  ignore_error: true
  commentary:   'Current firewall NAT configuration:'
- command:      "sudo stop <%= former_service %> || echo 'No previous instance running'"
  commentary:   'Stopping the previous instance'
  ignore_error: true
